// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace EFCoreTest.Models;

public partial class bencomlicensingContext : DbContext
{
    public bencomlicensingContext()
    {
    }

    public bencomlicensingContext(DbContextOptions<bencomlicensingContext> options)
        : base(options)
    {
    }

    public virtual DbSet<License> License { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=192.168.1.131;Initial Catalog=bencom_licensing;User ID=sa;Password=Abacus331860;Persist Security Info=True;TrustServerCertificate=True;MultipleActiveResultSets=false");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<License>(entity =>
        {
            entity.HasKey(e => e.IdLicense);

            entity.ToTable("license");

            entity.HasIndex(e => e.SerialNo, "IX_serial_no").IsUnique();

            entity.Property(e => e.IdLicense)
                .HasMaxLength(10)
                .HasColumnName("id_license");
            entity.Property(e => e.Activated)
                .HasColumnType("datetime")
                .HasColumnName("activated");
            entity.Property(e => e.DatumFakturisanja)
                .HasColumnType("date")
                .HasColumnName("datum_fakturisanja");
            entity.Property(e => e.IdDescription).HasColumnName("id_description");
            entity.Property(e => e.IdPartner)
                .IsRequired()
                .HasMaxLength(13)
                .HasColumnName("id_partner");
            entity.Property(e => e.IsActive)
                .IsRequired()
                .HasDefaultValueSql("((1))")
                .HasColumnName("is_active");
            entity.Property(e => e.IssuedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("issued_by");
            entity.Property(e => e.Iznos)
                .HasColumnType("money")
                .HasColumnName("iznos");
            entity.Property(e => e.Limit)
                .HasDefaultValueSql("((5))")
                .HasColumnName("limit");
            entity.Property(e => e.LimitRelated).HasColumnName("limit_related");
            entity.Property(e => e.SerialNo)
                .IsRequired()
                .HasMaxLength(29)
                .IsUnicode(false)
                .HasColumnName("serial_no");
            entity.Property(e => e.Type)
                .HasDefaultValueSql("((1))")
                .HasColumnName("type");
            entity.Property(e => e.UgovoreniLimit).HasColumnName("ugovoreni_limit");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}